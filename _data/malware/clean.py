#!/usr/bin/env python

"""
    clean.py
"""

import numpy as np
from pygtrie import CharTrie
from collections import Counter
from pyspark import SparkContext

def parse_line(x):
    try:
        filename, edge = x.split('\t')
        src, dsts = edge.split(' ==> ')
        if dsts[0] == '[':
            dsts = [d.strip() for d in eval(dsts)]
        else:
            dsts = [dsts]
        
        return (filename, (src, dsts))
    except:
        return None

def parse_class(x):
    return x.split(':')[0][1:].split('$')[0]

def compress_classes(x):
    src = parse_class(x[0])
    dsts = map(parse_class, x[1])
    for dst, count in Counter(dsts).items():
        yield src, dst, count

# --

# sc = SparkContext(appName="parse_malware")

inpath = '/user/bjohnson/data/hive/malware/mamadroid'

lines = sc.textFile(inpath, use_unicode=False)\
    .map(parse_line)\
    .filter(lambda x: x is not None)

classes = lines.flatMapValues(compress_classes)\
    .map(lambda x: ((x[0], x[1][0], x[1][1]), x[1][2]))\
    .reduceByKey(lambda a,b: a + b)\
    .map(lambda x: (x[0][0], x[0][1], x[0][2], x[1]))\
    .map(lambda x: '\t'.join(map(str, x)))\
    .saveAsTextFile(
        '/user/bjohnson/data/hive/malware/mamadroid-compressed/class-x001',
        compressionCodecClass="org.apache.hadoop.io.compress.GzipCodec"
    )


sc.textFile('/user/bjohnson/data/hive/malware/mamadroid-compressed/class-x001')\
    .saveAsTextFile(
        '/user/bjohnson/data/hive/malware/mamadroid-compressed/class',
        compressionCodecClass="org.apache.hadoop.io.compress.GzipCodec"
    )

# --
# Map to IDs to ints

unodes = sc.textFile('/user/bjohnson/data/hive/malware/mamadroid-compressed/class')\
    .map(lambda x: x.split('\t'))\
    .flatMap(lambda x: (x[1], x[2]))\
    .distinct()\
    .collect()

unodes = dict(zip(unodes, range(len(unodes))))

_ = sc.textFile('/user/bjohnson/data/hive/malware/mamadroid-compressed/class')\
    .map(lambda x: x.split('\t'))\
    .map(lambda x: (x[0], unodes[x[1]], unodes[x[2]], x[3]))\
    .map(lambda x: '\t'.join(map(str, x)))\
    .saveAsTextFile(
        '/user/bjohnson/data/hive/malware/mamadroid-compressed/class-int',
        compressionCodecClass="org.apache.hadoop.io.compress.GzipCodec"
    )
